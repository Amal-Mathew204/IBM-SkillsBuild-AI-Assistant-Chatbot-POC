services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./back:/app
    depends_on:
      - mongo
    env_file: ".env"
  
  semanticsearch:
    build:
      context: ./semanticsearch
      dockerfile: Dockerfile
    ports:
      - "8020:8020"
    volumes:
      - ./semanticsearch:/app
    depends_on:
      - mongo
      - backend
    env_file: ".env"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch-node
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    depends_on:
      - mongo
      - backend
    env_file: ".env"

  reversesearch:
    build:
      context: ./reversesearch
      dockerfile: Dockerfile
    ports:
      - "8030:8030"
    volumes:
      - ./reversesearch:/app
    depends_on:
      - mongo
      - backend
      - elasticsearch
    env_file: ".env"

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
        - 3000:3000
    volumes:
      - ./front/src:/app/src
    depends_on:
      - backend
      - semanticsearch

  caddy:
    image: caddy:latest
    container_name: caddy
    ports: 
      - "80:80"
      - "443:443"
    volumes:
     - ./caddy/Caddyfile:/etc/caddy/Caddyfile
     - caddy_data:/data
     - caddy_config:/config
    depends_on:
      - frontend
      - backend
      - semanticsearch

  mongo:
    image: mongo:6
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_CHATBOT_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./database/scripts/setup.sh:/docker-entrypoint-initdb.d/setup.sh
    env_file: ".env"

volumes:
  mongo_data:
  caddy_data:
  caddy_config:
  elasticsearch-data: